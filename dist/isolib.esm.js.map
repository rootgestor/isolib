{"version":3,"file":"isolib.esm.js","sources":["../src/components/atoms/Icon/index.tsx","../src/components/molecules/Breadcrumb/index.tsx","../src/components/molecules/SelectAsync/index.tsx","../src/components/molecules/Table/components/ImportantIcon.tsx","../src/components/molecules/Table/utils/getRowClassName.tsx","../src/components/molecules/Table/index.tsx","../src/components/molecules/TextCollapse/components/Container.tsx","../src/components/molecules/TextCollapse/components/ButtonCollapse.tsx","../src/components/molecules/TextCollapse/components/Internal.tsx","../src/components/molecules/TextCollapse/index.tsx","../src/components/molecules/Button/index.tsx","../src/components/atoms/FlowNode/index.tsx","../src/components/atoms/FlowEdge/index.tsx","../src/hooks/useTrasnlate.ts","../src/components/molecules/Flow/components/NodeTypeModal.tsx","../src/components/molecules/Flow/helpers/exportNode.ts","../src/components/molecules/Flow/helpers/nodesRelocation.ts","../src/components/molecules/Flow/helpers/index.ts","../src/components/molecules/Flow/hooks/useFlow.ts","../src/components/molecules/Flow/index.tsx"],"sourcesContent":["import React from 'react';\nimport * as Icons from '@ant-design/icons';\nexport interface IconProps {\n  src: string;\n  width?: string | number;\n  height?: string | number;\n  style?: {};\n}\n\nfunction Icon({ src, ...args }: IconProps) {\n  const key = src as keyof typeof Icons;\n  const Icon: any = Icons[key];\n  if (Icon) {\n    return <Icon {...args} />;\n  }\n\n  return <img style={{ padding: '5px', ...args }} src={src} />;\n}\n\nexport default Icon;\n","import React from 'react';\nimport DefaultBreadcrumb from 'antd/lib/breadcrumb';\nimport type { BreadcrumbProps } from './typings';\n\nconst Breadcrumb = ({ breadcrumbNameMap, onClick }: BreadcrumbProps) => {\n  const handleClick =\n    (url?: string) =>\n    (event: React.MouseEvent): boolean => {\n      event.preventDefault();\n      if (url) onClick(url);\n      return false;\n    };\n\n  return (\n    <DefaultBreadcrumb style={{ margin: '16px 0' }}>\n      {breadcrumbNameMap.map(({ label, href }) => (\n        <DefaultBreadcrumb.Item key={href} href=\"#\" onClick={handleClick(href)}>\n          {label}\n        </DefaultBreadcrumb.Item>\n      ))}\n    </DefaultBreadcrumb>\n  );\n};\n\nexport default Breadcrumb;\n","import React, { useState, useRef, useMemo } from 'react';\nimport Select from 'antd/lib/select';\nimport debounce from 'lodash/debounce';\n\nimport {\n  SelectAsyncProps,\n  OptionType,\n  SelectFetchOptionsType,\n} from './typings';\n\nfunction SelectAsync({\n  fetchOptions,\n  defaultOptions,\n  defaultValue,\n  onChange,\n  ...props\n}: SelectAsyncProps) {\n  const [value, setValue] = useState(() => defaultValue);\n  const [options, setOptions] = useState(() => defaultOptions);\n  const [loading, setLoading] = useState(false);\n  const fetchRef = useRef(0);\n\n  const debounceFetcher = useMemo(() => {\n    const loadOptions = (val: SelectFetchOptionsType) => {\n      fetchRef.current += 1;\n      const fetchId = fetchRef.current;\n      setLoading(true);\n      fetchOptions(val).then((newOptions: OptionType[]) => {\n        if (fetchId !== fetchRef.current) {\n          return;\n        }\n\n        setLoading(false);\n        setOptions(newOptions);\n      });\n    };\n\n    return debounce(loadOptions, 800);\n  }, [fetchOptions]);\n\n  const handleOnChange = (val: string, option: OptionType | OptionType[]) => {\n    setValue(val);\n    if (onChange) onChange(val, option);\n  };\n\n  return (\n    <Select\n      labelInValue\n      filterOption={false}\n      onSearch={debounceFetcher}\n      onFocus={debounceFetcher}\n      {...props}\n      loading={loading}\n      value={value}\n      onChange={handleOnChange}\n      options={options}\n    />\n  );\n}\n\nexport default SelectAsync;\n","import React from 'react';\nimport { BellOutlined, BellFilled } from '@ant-design/icons';\nimport { ImportantIconProps } from '../typings';\n\nfunction ImportantIcon({ important }: ImportantIconProps) {\n  const namespace = 'isolib-table-msg isolib-table-msg-icon';\n\n  if (important) {\n    return <BellFilled className={`${namespace}--selected`} />;\n  }\n  return <BellOutlined className={`${namespace}--no-selected`} />;\n}\n\nexport default ImportantIcon;\n","import { TableRecord } from '../typings';\n\nexport default (hoverID: any) =>\n  (record: TableRecord): string => {\n    const namespace = 'isolib-table-msg';\n    const classnames = [namespace];\n    if (record.read === false) {\n      classnames.push(`${namespace}--unread`);\n    }\n\n    if (hoverID === record._id) {\n      classnames.push(`${namespace}--hover`);\n    }\n\n    return classnames.join(' ');\n  };\n","import React, { useState } from 'react';\nimport DefaultTable from 'antd/lib/table';\nimport ImportantIcon from './components/ImportantIcon';\nimport getRowClassName from './utils/getRowClassName';\nimport { TableProps, TableRecord } from '../../..';\n\nfunction Table({\n  columns,\n  dataSource,\n  hidePagination = false,\n  loading = true,\n  onChange,\n  onRowClick,\n  pagination,\n  isMessage = false,\n  ...rest\n}: TableProps) {\n  const [hover, setHover] =\n    useState<React.SetStateAction<string | undefined>>('');\n\n  const additionalColumns = [];\n  if (isMessage) {\n    additionalColumns.push({\n      dataIndex: 'important',\n      key: 'important',\n      width: 40,\n      render: (_i: string | number | boolean, res: TableRecord) => (\n        <ImportantIcon {...res} />\n      ),\n    });\n  }\n\n  const handleRowClick = (record: TableRecord) => () => {\n    if (onRowClick) onRowClick(record);\n  };\n\n  return (\n    <div className={`isolib-table ${isMessage ? 'isolib-table-msg' : ''}`}>\n      <DefaultTable\n        size=\"middle\"\n        scroll={{ y: '100%' }}\n        {...rest}\n        rowSelection={{ type: 'checkbox' }}\n        columns={[...additionalColumns, ...columns]}\n        dataSource={dataSource}\n        pagination={\n          !hidePagination && {\n            ...pagination,\n            showSizeChanger: true,\n            position: ['bottomCenter'],\n          }\n        }\n        onChange={onChange}\n        loading={loading}\n        rowKey={(record: { [key: string]: any }) => record._id}\n        rowClassName={isMessage ? getRowClassName(hover) : ''}\n        onRow={(record) => ({\n          onClick: handleRowClick(record),\n          onMouseEnter: () => setHover(record._id),\n          onMouseLeave: () => setHover(''),\n        })}\n      />\n    </div>\n  );\n}\n\nexport default Table;\n","import React from 'react';\nimport type { ContainerProps } from '../typings';\n\nexport const Container = ({ children, style = {} }: ContainerProps) => {\n  return (\n    <div\n      className=\"isolib-text-collapse isolib-text-collapse-container\"\n      style={style}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport DefaultButton from 'antd/lib/button';\nimport type { ButtonCollapseProps } from '../typings';\n\nexport const ButtonCollapse = ({\n  children,\n  collapsed,\n  hidden,\n  innerRef,\n  onClick,\n}: ButtonCollapseProps) => {\n  return (\n    <DefaultButton\n      type=\"link\"\n      className=\"isolib-text-collapse-button\"\n      ref={innerRef}\n      hidden={hidden}\n      onClick={onClick}\n      style={collapsed ? { position: 'absolute' } : {}}\n    >\n      {children}\n    </DefaultButton>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport type { InternalProps } from '../typings';\n\nexport const Internal = ({\n  innerRef,\n  collapsed,\n  space,\n  children,\n}: InternalProps) => {\n  return (\n    <div\n      ref={innerRef}\n      style={collapsed && space ? { paddingRight: space } : {}}\n      className={classNames('isolib-text-collapse-internal', {\n        'isolib-text-collapse-internal--collapsed': collapsed,\n      })}\n    >\n      {children}\n    </div>\n  );\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Container, ButtonCollapse, Internal } from './components';\nimport type { TextCollapseProps } from './typings';\n\nfunction TextCollapse({\n  children,\n  textSpace,\n  textLess,\n  textMore,\n  style = {},\n}: TextCollapseProps) {\n  const [collapsed, setCollapsed] = useState(true);\n  const [buttonHidden, setButtonHidden] = useState(true);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const internalRef = useRef<HTMLDivElement>(null);\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  const handleClick = () => {\n    setCollapsed(!collapsed);\n  };\n\n  useEffect(() => {\n    if (internalRef.current && textRef.current) {\n      const textWidth = textRef.current.offsetWidth;\n      const innerWidth = internalRef.current.offsetWidth;\n      const bHidden = !!(textWidth + textSpace < innerWidth);\n      setButtonHidden(bHidden);\n    }\n  }, [textSpace]);\n\n  return (\n    <Container style={style}>\n      <Internal collapsed={collapsed} innerRef={internalRef} space={textSpace}>\n        <span ref={textRef}>{children}</span>\n        <ButtonCollapse\n          innerRef={buttonRef}\n          collapsed={collapsed}\n          onClick={handleClick}\n          hidden={buttonHidden}\n        >\n          {collapsed ? textMore : textLess}\n        </ButtonCollapse>\n      </Internal>\n    </Container>\n  );\n}\n\nexport default TextCollapse;\n","import React from 'react';\nimport Icon from '../../atoms/Icon';\nimport DefaultButton from 'antd/lib/button';\nimport type { ButtonProps } from './typings';\n\nfunction Button(props: ButtonProps) {\n  const { icon, size, className, ...rest } = props;\n\n  if (size === 'bigger') {\n    return (\n      <Button className={`isolib__bigger-button ${className}`} {...rest}>\n        <div className=\"isolib__bigger-button-label\">{props.children}</div>\n        {!!icon && (\n          <div className=\"isolib__bigger-button-icon\">\n            <Icon src={icon} />\n          </div>\n        )}\n      </Button>\n    );\n  }\n\n  return <DefaultButton {...props} className={className} size={size} />;\n}\n\nexport default Button;\n","import React, { memo } from 'react';\nimport { Position, Handle } from 'reactflow';\nimport Icon from '../Icon';\n\nexport const FlowNode = memo(({ data }: any) => {\n  const { icon, label, onRemove, color = '#6938fb' } = data;\n  return (\n    <>\n      <Handle type=\"target\" position={Position.Top} isConnectable={false} />\n      <div className=\"react-flow__custom-node\">\n        <div\n          className=\"react-flow__custom-node-container\"\n          style={{ borderColor: color }}\n        >\n          <div\n            className=\"react-flow__custom-node-header\"\n            style={{ background: color }}\n          >\n            <span className=\"react-flow__custom-node-header-icon\">\n              <Icon src={icon} />\n            </span>\n            {!data?.static && (\n              <span\n                className=\"react-flow__custom-node-header-close\"\n                onClick={onRemove}\n              >\n                <Icon src=\"CloseCircleFilled\" />\n              </span>\n            )}\n          </div>\n          <div className=\"react-flow__custom-node-label\">{label}</div>\n        </div>\n      </div>\n      <Handle\n        type=\"source\"\n        position={Position.Bottom}\n        id=\"b\"\n        style={{ bottom: 10, top: 'auto' }}\n        isConnectable={false}\n      />\n    </>\n  );\n});\n","import React from 'react';\nimport { getBezierPath } from 'reactflow';\n\nexport const FlowEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  markerEnd,\n}: any): JSX.Element => {\n  const mainColor = '#b1b1b7';\n  const [edgePath] = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n    curvature: 0,\n  });\n\n  const X = (sourceX + targetX) / 2;\n  const Y = (sourceY + targetY) / 2;\n  const node = data.target;\n  const edge = id;\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      {!data?.static && (\n        <g\n          transform={`translate(${X}, ${Y})`}\n          onClick={() => data?.onClick(node, edge)}\n        >\n          <rect\n            x=\"-10\"\n            y=\"-10\"\n            width=\"18\"\n            ry=\"4\"\n            rx=\"4\"\n            height=\"18\"\n            fill=\"white\"\n            stroke={mainColor}\n          ></rect>\n          <text fill={mainColor} y=\"3\" x=\"-5\">\n            +\n          </text>\n        </g>\n      )}\n    </>\n  );\n};\n\n/**\n * \n  \n */\n","type I18nProps = { [key: string]: any };\n\nexport const useTranslate =\n  (i18n?: I18nProps) =>\n  (text: string): string => {\n    return i18n ? i18n[text] : text;\n  };\n","import React, { useState } from 'react';\nimport Modal from 'antd/lib/modal';\n\nimport Button from '../../../molecules/Button';\nimport { useTranslate } from '../../../../hooks/useTrasnlate';\n\nimport type { NoteTypeModalProps, payloadType } from '../typings';\n\nconst NodeTypeModal = ({\n  id,\n  icon,\n  label,\n  i18n,\n  form,\n  onSubmit,\n}: NoteTypeModalProps) => {\n  const tt = useTranslate(i18n);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleCloseModal = () => setIsOpen(false);\n\n  const handleSubmit = (payload: payloadType) => {\n    onSubmit(payload);\n    handleCloseModal();\n  };\n\n  return (\n    <>\n      <Button\n        key={id}\n        icon={icon}\n        onClick={() => setIsOpen(true)}\n        size=\"bigger\"\n        className=\"flow-modal-add-item\"\n      >\n        {label}\n      </Button>\n\n      <Modal\n        title={tt('Add node')}\n        open={isOpen}\n        onCancel={handleCloseModal}\n        footer={[<Button onClick={handleCloseModal}>{tt('Close')}</Button>]}\n      >\n        {form({ onSubmit: handleSubmit })}\n      </Modal>\n    </>\n  );\n};\n\nexport default NodeTypeModal;\n","import type { Node } from 'reactflow';\nimport type { FlowDefaultNode } from '../typings';\n\nexport const exportNode = (nodes: Node[]): FlowDefaultNode[] => {\n  return nodes\n    .filter((node) => node.type === 'FlowNode')\n    .map(({ data }) => {\n      const variables: FlowDefaultNode = {\n        label: data.label,\n        icon: data.icon,\n      };\n\n      if (data.color) variables.color = data.color;\n\n      if (data.static) variables.static = data.static;\n\n      if (data.payload) variables.payload = data.payload;\n\n      return variables;\n    });\n};\n","import type { FlowNode } from '../typings';\nimport {\n  dxBetweenStartAndNode,\n  dxBetweenNodes,\n  dxLessWhenStaticNode,\n} from './index';\n\nexport const nodesRelocation = (nodes: FlowNode[]) => {\n  return nodes.reduce((initial, node, key) => {\n    const isStart = key === 0;\n    const isSecond = key === 1;\n    const beforeItem = initial[key - 1];\n    if (isStart) {\n      node.position.y = 0;\n    } else if (isSecond) {\n      node.position.y = dxBetweenStartAndNode;\n    } else {\n      const positionY = beforeItem?.position.y;\n      node.position.y = positionY + dxBetweenNodes;\n    }\n\n    if (beforeItem?.id !== 'start' && node.data.static) {\n      node.position.y -= dxLessWhenStaticNode;\n    }\n\n    return [...initial, node];\n  }, [] as FlowNode[]);\n};\n","export * from './exportNode';\nexport * from './nodesRelocation';\n\nexport const mainColor = '#6938fb';\nexport const dxBetweenNodes = 100;\nexport const dxBetweenStartAndNode = 80;\nexport const dxLessWhenStaticNode = 20;\n","import React, { useEffect, useRef } from 'react';\nimport { useNodesState, useEdgesState } from 'reactflow';\nimport { exportNode, nodesRelocation } from '../helpers';\n\nimport { mainColor, dxBetweenStartAndNode } from '../helpers';\n\nimport type {\n  FlowNode,\n  FlowDefaultNode,\n  FlowEdge,\n  payloadType,\n} from '../typings';\n\nconst circleStyles: React.CSSProperties = {\n  width: 24,\n  height: 24,\n  borderRadius: '50%',\n  textTransform: 'uppercase',\n  textAlign: 'center',\n  padding: 0,\n  justifyContent: 'center',\n  alignItems: 'center',\n  display: 'flex',\n  fontSize: '.3rem',\n};\n\nconst initialNodes: FlowNode[] = [\n  {\n    id: 'start',\n    type: 'input',\n    data: { label: 'Start' },\n    style: {\n      ...circleStyles,\n      background: mainColor,\n      borderColor: mainColor,\n      color: '#fff',\n    },\n    position: { x: 63, y: 0 },\n    draggable: true,\n  },\n  {\n    id: 'end',\n    type: 'output',\n    style: {\n      ...circleStyles,\n      background: mainColor,\n      borderColor: mainColor,\n      color: '#fff',\n    },\n    data: { label: 'End' },\n    position: { x: 63, y: dxBetweenStartAndNode },\n    draggable: true,\n  },\n];\n\nconst initialEdges: FlowEdge[] = [\n  {\n    id: 'start-end',\n    type: 'FlowEdge',\n    source: 'start',\n    target: 'end',\n  },\n];\n\ninterface BuildFlowData {\n  source: string;\n  target: string;\n  static?: boolean;\n}\n\ninterface FlowHookProps {\n  openModal: (isOpen: boolean) => void;\n  onAdd?: (nodes: FlowDefaultNode[]) => void;\n  onRemove?: (nodes: FlowDefaultNode[]) => void;\n  defaultNodes?: FlowDefaultNode[];\n  draggable?: boolean;\n}\n\nconst useFlow = ({\n  defaultNodes = [],\n  onRemove,\n  onAdd,\n  openModal,\n  draggable,\n}: FlowHookProps) => {\n  const EdgeDataRef = useRef({ idNode: '', idEdge: '' });\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n\n  const onClickEdge = (idNode: string, idEdge: string) => {\n    EdgeDataRef.current = { idNode, idEdge };\n    openModal(true);\n  };\n\n  const buildFlowEdge = (data: BuildFlowData): FlowEdge => {\n    const curDate = String(Math.random() * 100000);\n    const { source, target } = data;\n    return {\n      id: curDate,\n      type: 'FlowEdge',\n      source,\n      target,\n      data: {\n        target,\n        static: data.static,\n        onClick: onClickEdge,\n      },\n    };\n  };\n\n  const handleRemove = (id: string) => {\n    let nodeList: FlowNode[] = [];\n\n    setNodes((nodes) => {\n      setEdges((edges) => {\n        const index = nodes.findIndex((node) => node.id === id);\n\n        const afterElement = nodes[index + 1];\n        const source = nodes[index - 1].id;\n        const target = afterElement.id;\n\n        const added = buildFlowEdge({\n          static: afterElement.data.static,\n          source,\n          target,\n        });\n\n        const filtered = edges.filter(\n          (edge) => edge.source !== id && edge.target !== id\n        );\n        return [...filtered, added];\n      });\n\n      nodeList = nodes.filter((node) => node.id !== id);\n      return nodesRelocation(nodeList);\n    });\n\n    if (onRemove) {\n      onRemove(exportNode(nodeList));\n    }\n  };\n\n  const buildFlowNode = (\n    data: FlowDefaultNode,\n    payload: payloadType\n  ): FlowNode => {\n    const curDate = String(Math.random() * 100000);\n    return {\n      id: curDate,\n      type: 'FlowNode',\n      position: { x: 0, y: 0 },\n      draggable,\n      data: {\n        ...data,\n        payload,\n        onRemove: () => handleRemove(curDate),\n      },\n    };\n  };\n\n  const handleAdd =\n    (defaultNode: FlowDefaultNode) => (payload: payloadType) => {\n      let nodesCopy: FlowNode[] = [];\n\n      const { idNode, idEdge } = EdgeDataRef.current;\n      const node = buildFlowNode(defaultNode, payload);\n\n      setNodes((nodes) => {\n        setEdges((edges) => {\n          const deleted = edges.find((edge) => edge.id === idEdge);\n          if (!deleted) return edges;\n\n          const edgeCopy = edges.filter((edge) => edge.id !== idEdge);\n\n          const addedEdges = [\n            buildFlowEdge({\n              source: deleted.source,\n              target: node.id,\n            }),\n            buildFlowEdge({\n              source: node.id,\n              target: deleted.target,\n            }),\n          ];\n\n          return edgeCopy.concat(addedEdges);\n        });\n\n        nodesCopy = [...nodes];\n        const index = nodesCopy.findIndex((node) => node.id === idNode);\n        nodesCopy.splice(index, 0, node);\n        return nodesRelocation(nodesCopy);\n      });\n\n      if (onAdd) {\n        onAdd(exportNode(nodesCopy));\n      }\n\n      openModal(false);\n    };\n\n  useEffect(() => {\n    const res = defaultNodes.reduce(\n      (initial, data: FlowDefaultNode, key: number) => {\n        const beforeItem = initial.nodes[key - 1];\n\n        const node = buildFlowNode(data, data.payload || {});\n        const edge = buildFlowEdge({\n          static: data.static,\n          source: beforeItem ? beforeItem.id : 'start',\n          target: node.id,\n        });\n\n        return {\n          ...initial,\n          nodes: [...initial.nodes, node],\n          edges: [...initial.edges, edge],\n        };\n      },\n      { nodes: [] as FlowNode[], edges: [] as FlowEdge[] }\n    );\n\n    const [start, end] = initialNodes.map((item) => ({ ...item, draggable }));\n    const nodes = nodesRelocation([start, ...res.nodes, end]);\n    const sourceIndex = nodes.length - 2;\n\n    const endEdge = buildFlowEdge({\n      source: nodes[sourceIndex].id,\n      target: 'end',\n    });\n\n    setNodes(nodes);\n    setEdges([...res.edges, endEdge]);\n  }, []);\n\n  return {\n    nodes,\n    edges,\n    onNodesChange,\n    onEdgesChange,\n    handleAdd,\n  };\n};\n\nexport default useFlow;\n","import React, { useRef, useState, useEffect } from 'react';\nimport ReactFlow, { Controls } from 'reactflow';\nimport Modal from 'antd/lib/modal';\n\nimport Button from '../../molecules/Button';\nimport * as FlowNode from '../../atoms/FlowNode';\nimport * as FlowEdge from '../../atoms/FlowEdge';\nimport { useTranslate } from '../../../hooks/useTrasnlate';\nimport NodeTypeModal from './components/NodeTypeModal';\nimport useFlow from './hooks/useFlow';\n\nimport type { FlowProps, FlowContainerRef } from './typings';\n\n// import './styles.less';\n\nconst Flow = (props: FlowProps) => {\n  const containerRef: FlowContainerRef = useRef(null);\n  const tt = useTranslate(props.i18n);\n  const [horizontal, setHorizontal] = useState(0);\n  const [isOpen, openModal] = useState(false);\n\n  const { defaultNodes, onRemove, draggable, onAdd } = props;\n  const flowParams = { defaultNodes, onRemove, onAdd, openModal, draggable };\n\n  const flow = useFlow(flowParams);\n\n  const handleCloseModal = () => openModal(false);\n\n  useEffect(() => {\n    const width = containerRef.current?.offsetWidth;\n    if (width) {\n      const x = width / 2 - 150;\n      setHorizontal(x);\n    }\n  }, []);\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"react-flow-global-container\"\n      style={{ width: '100%', height: '100vh' }}\n    >\n      {horizontal && (\n        <>\n          <ReactFlow\n            {...flow}\n            edgeTypes={FlowEdge}\n            nodeTypes={FlowNode}\n            snapToGrid={true}\n            defaultViewport={{\n              x: horizontal,\n              y: 0,\n              zoom: 2,\n            }}\n            minZoom={1}\n            maxZoom={2}\n            attributionPosition=\"bottom-left\"\n          >\n            <Controls showInteractive={false} />\n          </ReactFlow>\n          {props.nodeTypes && (\n            <Modal\n              title={tt('Add node')}\n              open={isOpen}\n              onCancel={handleCloseModal}\n              footer={[\n                <Button onClick={handleCloseModal}>{tt('Close')}</Button>,\n              ]}\n            >\n              <div className=\"flow-modal-add-container\">\n                {props.nodeTypes.map((node) => (\n                  <NodeTypeModal\n                    key={node.id}\n                    {...node}\n                    onSubmit={flow.handleAdd(node)}\n                    i18n={props.i18n}\n                  />\n                ))}\n              </div>\n            </Modal>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Flow;\n"],"names":["Icon","src","args","key","Icons","React","style","padding","Breadcrumb","breadcrumbNameMap","onClick","handleClick","url","event","preventDefault","DefaultBreadcrumb","margin","map","label","href","Item","SelectAsync","fetchOptions","defaultOptions","defaultValue","onChange","props","useState","value","setValue","options","setOptions","loading","setLoading","fetchRef","useRef","debounceFetcher","useMemo","loadOptions","val","current","fetchId","then","newOptions","debounce","handleOnChange","option","Select","labelInValue","filterOption","onSearch","onFocus","ImportantIcon","important","namespace","BellFilled","className","BellOutlined","hoverID","record","classnames","read","push","_id","join","Table","columns","dataSource","hidePagination","onRowClick","pagination","isMessage","rest","hover","setHover","additionalColumns","dataIndex","width","render","_i","res","handleRowClick","DefaultTable","size","scroll","y","rowSelection","type","showSizeChanger","position","rowKey","rowClassName","getRowClassName","onRow","onMouseEnter","onMouseLeave","Container","children","ButtonCollapse","collapsed","hidden","innerRef","DefaultButton","ref","Internal","space","paddingRight","classNames","TextCollapse","textSpace","textLess","textMore","setCollapsed","buttonHidden","setButtonHidden","buttonRef","internalRef","textRef","useEffect","textWidth","offsetWidth","innerWidth","bHidden","Button","icon","FlowNode","memo","data","onRemove","color","Handle","Position","Top","isConnectable","borderColor","background","Bottom","id","bottom","top","FlowEdge","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","markerEnd","mainColor","getBezierPath","curvature","edgePath","X","Y","node","target","edge","d","transform","x","ry","rx","height","fill","stroke","useTranslate","i18n","text","NodeTypeModal","form","onSubmit","tt","isOpen","setIsOpen","handleCloseModal","handleSubmit","payload","Modal","title","open","onCancel","footer","exportNode","nodes","filter","variables","nodesRelocation","reduce","initial","isStart","isSecond","beforeItem","dxBetweenStartAndNode","positionY","dxBetweenNodes","dxLessWhenStaticNode","circleStyles","borderRadius","textTransform","textAlign","justifyContent","alignItems","display","fontSize","initialNodes","draggable","initialEdges","source","useFlow","defaultNodes","onAdd","openModal","EdgeDataRef","idNode","idEdge","useNodesState","setNodes","onNodesChange","useEdgesState","edges","setEdges","onEdgesChange","onClickEdge","buildFlowEdge","curDate","String","Math","random","handleRemove","nodeList","index","findIndex","afterElement","added","filtered","buildFlowNode","handleAdd","defaultNode","nodesCopy","deleted","find","edgeCopy","addedEdges","concat","splice","item","start","end","sourceIndex","length","endEdge","Flow","containerRef","horizontal","setHorizontal","flowParams","flow","ReactFlow","edgeTypes","nodeTypes","snapToGrid","defaultViewport","zoom","minZoom","maxZoom","attributionPosition","Controls","showInteractive"],"mappings":"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"}