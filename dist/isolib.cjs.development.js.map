{"version":3,"file":"isolib.cjs.development.js","sources":["../src/components/atoms/Icon/index.tsx","../src/components/molecules/Breadcrumb/index.tsx","../src/components/molecules/SelectAsync/index.tsx","../src/components/molecules/Table/components/ImportantIcon.tsx","../src/components/molecules/Table/utils/getRowClassName.tsx","../src/components/molecules/Table/index.tsx","../src/components/molecules/TextCollapse/components/Container.tsx","../src/components/molecules/TextCollapse/components/ButtonCollapse.tsx","../src/components/molecules/TextCollapse/components/Internal.tsx","../src/components/molecules/TextCollapse/index.tsx","../src/components/molecules/Button/index.tsx","../src/components/atoms/FlowNode/index.tsx","../src/components/atoms/FlowEdge/index.tsx","../src/hooks/useTrasnlate.ts","../src/components/molecules/Flow/components/NodeTypeModal.tsx","../src/components/molecules/Flow/helpers/exportNode.ts","../src/components/molecules/Flow/helpers/nodesRelocation.ts","../src/components/molecules/Flow/helpers/index.ts","../src/components/molecules/Flow/hooks/useFlow.ts","../src/components/molecules/Flow/index.tsx"],"sourcesContent":["import React from 'react';\nimport * as Icons from '@ant-design/icons';\nexport interface IconProps {\n  src: string;\n  width?: string | number;\n  height?: string | number;\n  style?: {};\n}\n\nfunction Icon({ src, ...args }: IconProps) {\n  const key = src as keyof typeof Icons;\n  const Icon: any = Icons[key];\n  if (Icon) {\n    return <Icon {...args} />;\n  }\n\n  return <img style={{ padding: '5px', ...args }} src={src} />;\n}\n\nexport default Icon;\n","import React from 'react';\nimport DefaultBreadcrumb from 'antd/lib/breadcrumb';\nimport type { BreadcrumbProps } from './typings';\n\nconst Breadcrumb = ({ breadcrumbNameMap, onClick }: BreadcrumbProps) => {\n  const handleClick =\n    (url?: string) =>\n    (event: React.MouseEvent): boolean => {\n      event.preventDefault();\n      if (url) onClick(url);\n      return false;\n    };\n\n  return (\n    <DefaultBreadcrumb style={{ margin: '16px 0' }}>\n      {breadcrumbNameMap.map(({ label, href }) => (\n        <DefaultBreadcrumb.Item key={href} href=\"#\" onClick={handleClick(href)}>\n          {label}\n        </DefaultBreadcrumb.Item>\n      ))}\n    </DefaultBreadcrumb>\n  );\n};\n\nexport default Breadcrumb;\n","import React, { useState, useRef, useMemo } from 'react';\nimport Select from 'antd/lib/select';\nimport debounce from 'lodash/debounce';\n\nimport {\n  SelectAsyncProps,\n  OptionType,\n  SelectFetchOptionsType,\n} from './typings';\n\nfunction SelectAsync({\n  fetchOptions,\n  defaultOptions,\n  defaultValue,\n  onChange,\n  ...props\n}: SelectAsyncProps) {\n  const [value, setValue] = useState(() => defaultValue);\n  const [options, setOptions] = useState(() => defaultOptions);\n  const [loading, setLoading] = useState(false);\n  const fetchRef = useRef(0);\n\n  const debounceFetcher = useMemo(() => {\n    const loadOptions = (val: SelectFetchOptionsType) => {\n      fetchRef.current += 1;\n      const fetchId = fetchRef.current;\n      setLoading(true);\n      fetchOptions(val).then((newOptions: OptionType[]) => {\n        if (fetchId !== fetchRef.current) {\n          return;\n        }\n\n        setLoading(false);\n        setOptions(newOptions);\n      });\n    };\n\n    return debounce(loadOptions, 800);\n  }, [fetchOptions]);\n\n  const handleOnChange = (val: string, option: OptionType | OptionType[]) => {\n    setValue(val);\n    if (onChange) onChange(val, option);\n  };\n\n  return (\n    <Select\n      labelInValue\n      filterOption={false}\n      onSearch={debounceFetcher}\n      onFocus={debounceFetcher}\n      {...props}\n      loading={loading}\n      value={value}\n      onChange={handleOnChange}\n      options={options}\n    />\n  );\n}\n\nexport default SelectAsync;\n","import React from 'react';\nimport { BellOutlined, BellFilled } from '@ant-design/icons';\nimport { ImportantIconProps } from '../typings';\n\nfunction ImportantIcon({ important }: ImportantIconProps) {\n  const namespace = 'isolib-table-msg isolib-table-msg-icon';\n\n  if (important) {\n    return <BellFilled className={`${namespace}--selected`} />;\n  }\n  return <BellOutlined className={`${namespace}--no-selected`} />;\n}\n\nexport default ImportantIcon;\n","import { TableRecord } from '../typings';\n\nexport default (hoverID: any) =>\n  (record: TableRecord): string => {\n    const namespace = 'isolib-table-msg';\n    const classnames = [namespace];\n    if (record.read === false) {\n      classnames.push(`${namespace}--unread`);\n    }\n\n    if (hoverID === record._id) {\n      classnames.push(`${namespace}--hover`);\n    }\n\n    return classnames.join(' ');\n  };\n","import React, { useState } from 'react';\nimport DefaultTable from 'antd/lib/table';\nimport ImportantIcon from './components/ImportantIcon';\nimport getRowClassName from './utils/getRowClassName';\nimport { TableProps, TableRecord } from '../../..';\n\nfunction Table({\n  columns,\n  dataSource,\n  hidePagination = false,\n  loading = true,\n  onChange,\n  onRowClick,\n  pagination,\n  isMessage = false,\n  ...rest\n}: TableProps) {\n  const [hover, setHover] =\n    useState<React.SetStateAction<string | undefined>>('');\n\n  const additionalColumns = [];\n  if (isMessage) {\n    additionalColumns.push({\n      dataIndex: 'important',\n      key: 'important',\n      width: 40,\n      render: (_i: string | number | boolean, res: TableRecord) => (\n        <ImportantIcon {...res} />\n      ),\n    });\n  }\n\n  const handleRowClick = (record: TableRecord) => () => {\n    if (onRowClick) onRowClick(record);\n  };\n\n  return (\n    <div className={`isolib-table ${isMessage ? 'isolib-table-msg' : ''}`}>\n      <DefaultTable\n        size=\"middle\"\n        scroll={{ y: '100%' }}\n        {...rest}\n        rowSelection={{ type: 'checkbox' }}\n        columns={[...additionalColumns, ...columns]}\n        dataSource={dataSource}\n        pagination={\n          !hidePagination && {\n            ...pagination,\n            showSizeChanger: true,\n            position: ['bottomCenter'],\n          }\n        }\n        onChange={onChange}\n        loading={loading}\n        rowKey={(record: { [key: string]: any }) => record._id}\n        rowClassName={isMessage ? getRowClassName(hover) : ''}\n        onRow={(record) => ({\n          onClick: handleRowClick(record),\n          onMouseEnter: () => setHover(record._id),\n          onMouseLeave: () => setHover(''),\n        })}\n      />\n    </div>\n  );\n}\n\nexport default Table;\n","import React from 'react';\nimport type { ContainerProps } from '../typings';\n\nexport const Container = ({ children, style = {} }: ContainerProps) => {\n  return (\n    <div\n      className=\"isolib-text-collapse isolib-text-collapse-container\"\n      style={style}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport DefaultButton from 'antd/lib/button';\nimport type { ButtonCollapseProps } from '../typings';\n\nexport const ButtonCollapse = ({\n  children,\n  collapsed,\n  hidden,\n  innerRef,\n  space,\n  onClick,\n}: ButtonCollapseProps) => {\n  return (\n    <DefaultButton\n      type=\"link\"\n      className=\"isolib-text-collapse-button\"\n      ref={innerRef}\n      hidden={hidden}\n      onClick={onClick}\n      style={collapsed ? { position: 'absolute', right: `-${space}px` } : {}}\n    >\n      {children}\n    </DefaultButton>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport type { InternalProps } from '../typings';\n\nexport const Internal = ({\n  innerRef,\n  collapsed,\n  space,\n  children,\n}: InternalProps) => {\n  return (\n    <div\n      ref={innerRef}\n      style={collapsed && space ? { paddingRight: space } : {}}\n      className={classNames('isolib-text-collapse-internal', {\n        'isolib-text-collapse-internal--collapsed': collapsed,\n      })}\n    >\n      {children}\n    </div>\n  );\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Container, ButtonCollapse, Internal } from './components';\nimport type { TextCollapseProps } from './typings';\n\nfunction TextCollapse({\n  children,\n  textSpace,\n  textLess,\n  textMore,\n  style = {},\n}: TextCollapseProps) {\n  const [collapsed, setCollapsed] = useState(true);\n  const [buttonHidden, setButtonHidden] = useState(true);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const internalRef = useRef<HTMLDivElement>(null);\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  const handleClick = () => {\n    setCollapsed(!collapsed);\n  };\n\n  useEffect(() => {\n    if (internalRef.current && textRef.current) {\n      const textWidth = textRef.current.offsetWidth;\n      const innerWidth = internalRef.current.offsetWidth;\n      const bHidden = !!(textWidth + textSpace < innerWidth);\n      setButtonHidden(bHidden);\n    }\n  }, [textSpace]);\n\n  return (\n    <Container style={style}>\n      <Internal collapsed={collapsed} innerRef={internalRef} space={textSpace}>\n        <span ref={textRef}>{children}</span>\n        <ButtonCollapse\n          innerRef={buttonRef}\n          collapsed={collapsed}\n          onClick={handleClick}\n          hidden={buttonHidden}\n          space={textSpace}\n        >\n          {collapsed ? textMore : textLess}\n        </ButtonCollapse>\n      </Internal>\n    </Container>\n  );\n}\n\nexport default TextCollapse;\n","import React from 'react';\nimport Icon from '../../atoms/Icon';\nimport DefaultButton from 'antd/lib/button';\nimport type { ButtonProps } from './typings';\n\nfunction Button(props: ButtonProps) {\n  const { icon, size, className, ...rest } = props;\n\n  if (size === 'bigger') {\n    return (\n      <Button className={`isolib__bigger-button ${className}`} {...rest}>\n        <div className=\"isolib__bigger-button-label\">{props.children}</div>\n        {!!icon && (\n          <div className=\"isolib__bigger-button-icon\">\n            <Icon src={icon} />\n          </div>\n        )}\n      </Button>\n    );\n  }\n\n  return <DefaultButton {...props} className={className} size={size} />;\n}\n\nexport default Button;\n","import React, { memo } from 'react';\nimport { Position, Handle } from 'reactflow';\nimport Icon from '../Icon';\n\nexport const FlowNode = memo(({ data }: any) => {\n  const { icon, label, onRemove, color = '#6938fb' } = data;\n  return (\n    <>\n      <Handle type=\"target\" position={Position.Top} />\n      <div className=\"react-flow__custom-node\">\n        <div\n          className=\"react-flow__custom-node-container\"\n          style={{ borderColor: color }}\n        >\n          <div\n            className=\"react-flow__custom-node-header\"\n            style={{ background: color }}\n          >\n            <span className=\"react-flow__custom-node-header-icon\">\n              <Icon src={icon} />\n            </span>\n            {!data?.static && (\n              <span\n                className=\"react-flow__custom-node-header-close\"\n                onClick={onRemove}\n              >\n                <Icon src=\"CloseCircleFilled\" />\n              </span>\n            )}\n          </div>\n          <div className=\"react-flow__custom-node-label\">{label}</div>\n        </div>\n      </div>\n      <Handle\n        type=\"source\"\n        position={Position.Bottom}\n        id=\"b\"\n        style={{ bottom: 10, top: 'auto' }}\n      />\n    </>\n  );\n});\n","import React from 'react';\nimport { getBezierPath } from 'reactflow';\n\nexport const FlowEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  markerEnd,\n}: any): JSX.Element => {\n  const mainColor = '#b1b1b7';\n  const [edgePath] = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n    curvature: 0,\n  });\n\n  const X = (sourceX + targetX) / 2;\n  const Y = (sourceY + targetY) / 2;\n  const node = data.target;\n  const edge = id;\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      {!data?.static && (\n        <>\n          <g\n            transform={`translate(${X}, ${Y})`}\n            onClick={() => data?.onAdd(node, edge)}\n          >\n            <rect\n              x=\"-10\"\n              y=\"-20\"\n              width=\"18\"\n              ry=\"4\"\n              rx=\"4\"\n              height=\"18\"\n              fill=\"white\"\n              stroke={mainColor}\n            ></rect>\n            <text fill={mainColor} y=\"-7\" x=\"-5\">\n              +\n            </text>\n          </g>\n          <g\n            transform={`translate(${X}, ${Y})`}\n            onClick={() => data?.onRemove(edge)}\n          >\n            <rect\n              x=\"-10\"\n              y=\"2\"\n              width=\"18\"\n              ry=\"4\"\n              rx=\"4\"\n              height=\"18\"\n              fill=\"white\"\n              stroke={mainColor}\n            ></rect>\n            <text fill={mainColor} y=\"15\" x=\"-4\">\n              -\n            </text>\n          </g>\n        </>\n      )}\n    </>\n  );\n};\n\n/**\n * \n  \n */\n","type I18nProps = { [key: string]: any };\n\nexport const useTranslate =\n  (i18n?: I18nProps) =>\n  (text: string): string => {\n    return i18n ? i18n[text] : text;\n  };\n","import React, { useState } from 'react';\nimport Modal from 'antd/lib/modal';\n\nimport Button from '../../../molecules/Button';\nimport { useTranslate } from '../../../../hooks/useTrasnlate';\n\nimport type { NoteTypeModalProps, payloadType } from '../typings';\n\nconst NodeTypeModal = ({\n  id,\n  icon,\n  label,\n  i18n,\n  form,\n  onSubmit,\n}: NoteTypeModalProps) => {\n  const tt = useTranslate(i18n);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleCloseModal = () => setIsOpen(false);\n\n  const handleSubmit = (payload: payloadType) => {\n    onSubmit(payload);\n    handleCloseModal();\n  };\n\n  return (\n    <>\n      <Button\n        key={id}\n        icon={icon}\n        onClick={() => setIsOpen(true)}\n        size=\"bigger\"\n        className=\"flow-modal-add-item\"\n      >\n        {label}\n      </Button>\n\n      <Modal\n        title={tt('Add node')}\n        open={isOpen}\n        onCancel={handleCloseModal}\n        footer={[<Button onClick={handleCloseModal}>{tt('Close')}</Button>]}\n      >\n        {form({ onSubmit: handleSubmit })}\n      </Modal>\n    </>\n  );\n};\n\nexport default NodeTypeModal;\n","import type { Node, Edge } from 'reactflow';\nimport type { FlowDefaultNode } from '../typings';\n\nexport const exportNode = (nodes: Node[], edges: Edge[]): FlowDefaultNode[] => {\n  return nodes\n    .filter((node) => node.type === 'FlowNode')\n    .map(({ data, id }) => {\n      const source = edges.find((edge) => edge.source === id)?.id;\n      const target = edges.find((edge) => edge.target === id)?.id;\n\n      const variables: FlowDefaultNode = {\n        label: data.label,\n        icon: data.icon,\n      };\n\n      if (!source || !target) variables.unrelated = true;\n\n      if (data.color) variables.color = data.color;\n\n      if (data.static) variables.static = data.static;\n\n      if (data.payload) variables.payload = data.payload;\n\n      return variables;\n    });\n};\n","import type { FlowNode } from '../typings';\nimport {\n  dxBetweenStartAndNode,\n  dxBetweenNodes,\n  dxLessWhenStaticNode,\n} from './index';\n\nexport const nodesRelocation = (nodes: FlowNode[]) => {\n  return nodes.reduce((initial, node, key) => {\n    const isStart = key === 0;\n    const isSecond = key === 1;\n    const beforeItem = initial[key - 1];\n    if (isStart) {\n      node.position.y = 0;\n    } else if (isSecond) {\n      node.position.y = dxBetweenStartAndNode;\n    } else {\n      const positionY = beforeItem?.position.y;\n      node.position.y = positionY + dxBetweenNodes;\n    }\n\n    if (beforeItem?.id !== 'start' && node.data.static) {\n      node.position.y -= dxLessWhenStaticNode;\n    }\n\n    return [...initial, node];\n  }, [] as FlowNode[]);\n};\n","export * from './exportNode';\nexport * from './nodesRelocation';\n\nexport const mainColor = '#6938fb';\nexport const dxBetweenNodes = 100;\nexport const dxBetweenStartAndNode = 80;\nexport const dxLessWhenStaticNode = 20;\n","import React, { useEffect, useRef, useCallback } from 'react';\nimport { useNodesState, useEdgesState, addEdge } from 'reactflow';\nimport { exportNode, nodesRelocation } from '../helpers';\n\nimport { mainColor, dxBetweenStartAndNode } from '../helpers';\n\nimport type {\n  FlowNode,\n  FlowDefaultNode,\n  FlowEdge,\n  payloadType,\n} from '../typings';\n\nconst circleStyles: React.CSSProperties = {\n  width: 24,\n  height: 24,\n  borderRadius: '50%',\n  textTransform: 'uppercase',\n  textAlign: 'center',\n  padding: 0,\n  justifyContent: 'center',\n  alignItems: 'center',\n  display: 'flex',\n  fontSize: '.3rem',\n};\n\nconst initialNodes: FlowNode[] = [\n  {\n    id: 'start',\n    type: 'input',\n    data: { label: 'Start' },\n    style: {\n      ...circleStyles,\n      background: mainColor,\n      borderColor: mainColor,\n      color: '#fff',\n    },\n    position: { x: 63, y: 0 },\n    draggable: true,\n  },\n  {\n    id: 'end',\n    type: 'output',\n    style: {\n      ...circleStyles,\n      background: mainColor,\n      borderColor: mainColor,\n      color: '#fff',\n    },\n    data: { label: 'End' },\n    position: { x: 63, y: dxBetweenStartAndNode },\n    draggable: true,\n  },\n];\n\nconst initialEdges: FlowEdge[] = [\n  {\n    id: 'start-end',\n    type: 'FlowEdge',\n    source: 'start',\n    target: 'end',\n  },\n];\n\ninterface BuildFlowData {\n  source: string;\n  target: string;\n  static?: boolean;\n}\n\ninterface FlowHookProps {\n  openModal: (isOpen: boolean) => void;\n  onChange?: (nodes: FlowDefaultNode[]) => void;\n  defaultNodes?: FlowDefaultNode[];\n  draggable?: boolean;\n}\n\nconst useFlow = ({\n  defaultNodes = [],\n  onChange,\n  openModal,\n  draggable,\n}: FlowHookProps) => {\n  const EdgeDataRef = useRef({ idNode: '', idEdge: '' });\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n\n  const onAddEdge = (idNode: string, idEdge: string) => {\n    EdgeDataRef.current = { idNode, idEdge };\n    openModal(true);\n  };\n\n  const onRemoveEdge = (idEdge: string) => {\n    let nodeList: FlowNode[] = [];\n    let edgeList: FlowEdge[] = [];\n\n    setNodes((nodes) => {\n      nodeList = [...nodes];\n      return nodes;\n    });\n\n    setEdges((edges: FlowEdge[]) => {\n      edgeList = edges.filter((edge) => edge.id !== idEdge);\n      return edgeList;\n    });\n\n    if (onChange) {\n      onChange(exportNode(nodeList, edgeList));\n    }\n  };\n\n  const onConnect = useCallback((params) => {\n    let nodeList: FlowNode[] = [];\n    let edgeList: FlowEdge[] = [];\n\n    setNodes((nodes) => {\n      nodeList = [...nodes];\n      return nodes;\n    });\n\n    setEdges((eds: FlowEdge[]) => {\n      const targets = eds.filter(\n        (ed) => ed.target === params.target || ed.source === params.target\n      );\n\n      const sources = eds.filter(\n        (ed) => ed.target === params.source || ed.source === params.source\n      );\n\n      if (targets.length > 1 || sources.length > 1) return eds;\n\n      edgeList = addEdge(buildFlowEdge(params), eds);\n      return edgeList;\n    });\n\n    if (onChange) {\n      onChange(exportNode(nodeList, edgeList));\n    }\n  }, []);\n\n  const buildFlowEdge = (data: BuildFlowData): FlowEdge => {\n    const curDate = String(Math.random() * 100000);\n    const { source, target } = data;\n    return {\n      id: curDate,\n      type: 'FlowEdge',\n      source,\n      target,\n      data: {\n        target,\n        static: data.static,\n        onAdd: onAddEdge,\n        onRemove: onRemoveEdge,\n      },\n    };\n  };\n\n  const handleRemove = (id: string) => {\n    let nodeList: FlowNode[] = [];\n    let edgeList: FlowEdge[] = [];\n\n    setNodes((nodes) => {\n      setEdges((edges: FlowEdge[]) => {\n        const index = nodes.findIndex((node) => node.id === id);\n\n        const afterElement = nodes[index + 1];\n        const source = nodes[index - 1].id;\n        const target = afterElement.id;\n\n        const added = buildFlowEdge({\n          static: afterElement.data.static,\n          source,\n          target,\n        });\n\n        const filtered = edges.filter(\n          (edge) => edge.source !== id && edge.target !== id\n        );\n\n        edgeList = [...filtered, added];\n        return edgeList;\n      });\n\n      nodeList = nodes.filter((node) => node.id !== id);\n      return nodesRelocation(nodeList);\n    });\n\n    if (onChange) {\n      onChange(exportNode(nodeList, edgeList));\n    }\n  };\n\n  const buildFlowNode = (\n    data: FlowDefaultNode,\n    payload: payloadType\n  ): FlowNode => {\n    const curDate = String(Math.random() * 100000);\n    return {\n      id: curDate,\n      type: 'FlowNode',\n      position: { x: 0, y: 0 },\n      draggable,\n      data: {\n        ...data,\n        payload,\n        onRemove: () => handleRemove(curDate),\n      },\n    };\n  };\n\n  const handleAdd =\n    (defaultNode: FlowDefaultNode) => (payload: payloadType) => {\n      let nodesCopy: FlowNode[] = [];\n      let edgeCopy: FlowEdge[] = [];\n\n      const { idNode, idEdge } = EdgeDataRef.current;\n      const node = buildFlowNode(defaultNode, payload);\n\n      setNodes((nodes) => {\n        setEdges((edges: FlowEdge[]) => {\n          const deleted = edges.find((edge) => edge.id === idEdge);\n          if (!deleted) return edges;\n\n          const addedEdges = [\n            buildFlowEdge({\n              source: deleted.source,\n              target: node.id,\n            }),\n            buildFlowEdge({\n              source: node.id,\n              target: deleted.target,\n            }),\n          ];\n\n          edgeCopy = edges\n            .filter((edge) => edge.id !== idEdge)\n            .concat(addedEdges);\n          return edgeCopy;\n        });\n\n        nodesCopy = [...nodes];\n        const index = nodesCopy.findIndex((node) => node.id === idNode);\n        nodesCopy.splice(index, 0, node);\n        return nodesRelocation(nodesCopy);\n      });\n\n      if (onChange) {\n        onChange(exportNode(nodesCopy, edgeCopy));\n      }\n\n      openModal(false);\n    };\n\n  useEffect(() => {\n    const res = defaultNodes.reduce(\n      (initial, data: FlowDefaultNode, key: number) => {\n        const beforeItem = initial.nodes[key - 1];\n\n        const node = buildFlowNode(data, data.payload || {});\n        const edge = buildFlowEdge({\n          static: data.static,\n          source: beforeItem ? beforeItem.id : 'start',\n          target: node.id,\n        });\n\n        return {\n          ...initial,\n          nodes: [...initial.nodes, node],\n          edges: [...initial.edges, edge],\n        };\n      },\n      { nodes: [] as FlowNode[], edges: [] as FlowEdge[] }\n    );\n\n    const [start, end] = initialNodes.map((item) => ({ ...item, draggable }));\n    const nodes = nodesRelocation([start, ...res.nodes, end]);\n    const sourceIndex = nodes.length - 2;\n\n    const endEdge = buildFlowEdge({\n      source: nodes[sourceIndex].id,\n      target: 'end',\n    });\n\n    setNodes(nodes);\n    setEdges([...res.edges, endEdge]);\n  }, []);\n\n  return {\n    nodes,\n    edges,\n    onNodesChange,\n    onEdgesChange,\n    handleAdd,\n    onConnect,\n  };\n};\n\nexport default useFlow;\n","import React, { useRef, useState, useEffect } from 'react';\nimport ReactFlow, { Controls } from 'reactflow';\nimport Modal from 'antd/lib/modal';\n\nimport Button from '../../molecules/Button';\nimport * as FlowNode from '../../atoms/FlowNode';\nimport * as FlowEdge from '../../atoms/FlowEdge';\nimport { useTranslate } from '../../../hooks/useTrasnlate';\nimport NodeTypeModal from './components/NodeTypeModal';\nimport useFlow from './hooks/useFlow';\n\nimport type { FlowProps, FlowContainerRef } from './typings';\n\n// import './styles.less';\n\nconst Flow = (props: FlowProps) => {\n  const containerRef: FlowContainerRef = useRef(null);\n  const tt = useTranslate(props.i18n);\n  const [horizontal, setHorizontal] = useState(0);\n  const [isOpen, openModal] = useState(false);\n\n  const { defaultNodes, draggable, onChange } = props;\n  const flowParams = { defaultNodes, onChange, openModal, draggable };\n\n  const flow = useFlow(flowParams);\n\n  const handleCloseModal = () => openModal(false);\n\n  useEffect(() => {\n    const width = containerRef.current?.offsetWidth;\n    if (width) {\n      const x = width / 2 - 150;\n      setHorizontal(x);\n    }\n  }, []);\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"react-flow-global-container\"\n      style={{ width: '100%', height: '100vh' }}\n    >\n      {horizontal && (\n        <>\n          <ReactFlow\n            {...flow}\n            edgeTypes={FlowEdge}\n            nodeTypes={FlowNode}\n            snapToGrid={true}\n            defaultViewport={{\n              x: horizontal,\n              y: 0,\n              zoom: 2,\n            }}\n            minZoom={1}\n            maxZoom={2}\n            attributionPosition=\"bottom-left\"\n          >\n            <Controls showInteractive={false} />\n          </ReactFlow>\n          {props.nodeTypes && (\n            <Modal\n              title={tt('Add node')}\n              open={isOpen}\n              onCancel={handleCloseModal}\n              footer={[\n                <Button onClick={handleCloseModal}>{tt('Close')}</Button>,\n              ]}\n            >\n              <div className=\"flow-modal-add-container\">\n                {props.nodeTypes.map((node) => (\n                  <NodeTypeModal\n                    key={node.id}\n                    {...node}\n                    onSubmit={flow.handleAdd(node)}\n                    i18n={props.i18n}\n                  />\n                ))}\n              </div>\n            </Modal>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Flow;\n"],"names":["Icon","src","args","key","Icons","React","style","padding","Breadcrumb","breadcrumbNameMap","onClick","handleClick","url","event","preventDefault","DefaultBreadcrumb","margin","map","label","href","Item","SelectAsync","fetchOptions","defaultOptions","defaultValue","onChange","props","useState","value","setValue","options","setOptions","loading","setLoading","fetchRef","useRef","debounceFetcher","useMemo","loadOptions","val","current","fetchId","then","newOptions","debounce","handleOnChange","option","Select","labelInValue","filterOption","onSearch","onFocus","ImportantIcon","important","namespace","BellFilled","className","BellOutlined","hoverID","record","classnames","read","push","_id","join","Table","columns","dataSource","hidePagination","onRowClick","pagination","isMessage","rest","hover","setHover","additionalColumns","dataIndex","width","render","_i","res","handleRowClick","DefaultTable","size","scroll","y","rowSelection","type","showSizeChanger","position","rowKey","rowClassName","getRowClassName","onRow","onMouseEnter","onMouseLeave","Container","children","ButtonCollapse","collapsed","hidden","innerRef","space","DefaultButton","ref","right","Internal","paddingRight","classNames","TextCollapse","textSpace","textLess","textMore","setCollapsed","buttonHidden","setButtonHidden","buttonRef","internalRef","textRef","useEffect","textWidth","offsetWidth","innerWidth","bHidden","Button","icon","FlowNode","memo","data","onRemove","color","Handle","Position","Top","borderColor","background","Bottom","id","bottom","top","FlowEdge","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","markerEnd","mainColor","getBezierPath","curvature","edgePath","X","Y","node","target","edge","d","transform","onAdd","x","ry","rx","height","fill","stroke","useTranslate","i18n","text","NodeTypeModal","form","onSubmit","tt","isOpen","setIsOpen","handleCloseModal","handleSubmit","payload","Modal","title","open","onCancel","footer","exportNode","nodes","edges","filter","source","find","variables","unrelated","nodesRelocation","reduce","initial","isStart","isSecond","beforeItem","dxBetweenStartAndNode","positionY","dxBetweenNodes","dxLessWhenStaticNode","circleStyles","borderRadius","textTransform","textAlign","justifyContent","alignItems","display","fontSize","initialNodes","draggable","initialEdges","useFlow","defaultNodes","openModal","EdgeDataRef","idNode","idEdge","useNodesState","setNodes","onNodesChange","useEdgesState","setEdges","onEdgesChange","onAddEdge","onRemoveEdge","nodeList","edgeList","onConnect","useCallback","params","eds","targets","ed","sources","length","addEdge","buildFlowEdge","curDate","String","Math","random","handleRemove","index","findIndex","afterElement","added","filtered","buildFlowNode","handleAdd","defaultNode","nodesCopy","edgeCopy","deleted","addedEdges","concat","splice","item","start","end","sourceIndex","endEdge","Flow","containerRef","horizontal","setHorizontal","flowParams","flow","ReactFlow","edgeTypes","nodeTypes","snapToGrid","defaultViewport","zoom","minZoom","maxZoom","attributionPosition","Controls","showInteractive"],"mappings":"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"}