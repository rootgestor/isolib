{"version":3,"file":"isolib.cjs.production.min.js","sources":["../src/components/atoms/Icon/index.tsx","../src/components/molecules/Breadcrumb/index.tsx","../src/components/molecules/Table/components/ImportantIcon.tsx","../src/components/molecules/Table/utils/getRowClassName.tsx","../src/components/molecules/TextCollapse/components/Container.tsx","../src/components/molecules/TextCollapse/components/ButtonCollapse.tsx","../src/components/molecules/TextCollapse/components/Internal.tsx","../src/components/molecules/Button/index.tsx","../src/components/atoms/FlowNode/index.tsx","../src/components/atoms/FlowEdge/index.tsx","../src/hooks/useTrasnlate.ts","../src/components/molecules/Flow/components/NodeTypeModal.tsx","../src/components/molecules/Flow/helpers/exportNode.ts","../src/components/molecules/Flow/helpers/nodesRelocation.ts","../src/components/molecules/Flow/helpers/index.ts","../src/components/molecules/Flow/hooks/useFlow.ts","../src/components/molecules/Flow/index.tsx","../src/components/molecules/SelectAsync/index.tsx","../src/components/molecules/Table/index.tsx","../src/components/molecules/TextCollapse/index.tsx"],"sourcesContent":["import React from 'react';\nimport * as Icons from '@ant-design/icons';\nexport interface IconProps {\n  src: string;\n  alt?: string;\n  width?: string | number;\n  height?: string | number;\n  style?: {};\n}\n\nfunction Icon({ src, alt, ...args }: IconProps) {\n  const key = src as keyof typeof Icons;\n  const Icon: Function = Icons[key];\n  if (Icon) {\n    return <Icon {...args} />;\n  }\n\n  return <img style={{ padding: '5px', ...args }} src={src} alt={alt} />;\n}\n\nexport default Icon;\n","import React from 'react';\nimport DefaultBreadcrumb from 'antd/lib/breadcrumb';\nimport type { BreadcrumbProps } from './typings';\n\nconst Breadcrumb = ({ breadcrumbNameMap, onClick }: BreadcrumbProps) => {\n  const handleClick =\n    (url?: string) =>\n    (event: React.MouseEvent): boolean => {\n      event.preventDefault();\n      if (url) onClick(url);\n      return false;\n    };\n\n  return (\n    <DefaultBreadcrumb style={{ margin: '16px 0' }}>\n      {breadcrumbNameMap.map(({ label, href }) => (\n        <DefaultBreadcrumb.Item key={href} href=\"#\" onClick={handleClick(href)}>\n          {label}\n        </DefaultBreadcrumb.Item>\n      ))}\n    </DefaultBreadcrumb>\n  );\n};\n\nexport default Breadcrumb;\n","import React from 'react';\nimport { BellOutlined, BellFilled } from '@ant-design/icons';\nimport { ImportantIconProps } from '../typings';\n\nfunction ImportantIcon({ important }: ImportantIconProps) {\n  const namespace = 'isolib-table-msg isolib-table-msg-icon';\n\n  if (important) {\n    return <BellFilled className={`${namespace}--selected`} />;\n  }\n  return <BellOutlined className={`${namespace}--no-selected`} />;\n}\n\nexport default ImportantIcon;\n","import { TableRecord } from '../typings';\n\ninterface BaseRecord {\n  _id?: string;\n  read?: boolean;\n}\n\nexport default (hoverID: React.Key) =>\n  (record: TableRecord<BaseRecord>): string => {\n    const namespace = 'isolib-table-msg';\n    const classnames = [namespace];\n    if (record.read === false) {\n      classnames.push(`${namespace}--unread`);\n    }\n\n    if (hoverID === record._id) {\n      classnames.push(`${namespace}--hover`);\n    }\n\n    return classnames.join(' ');\n  };\n","import React from 'react';\nimport type { ContainerProps } from '../typings';\n\nexport const Container = ({ children, style = {} }: ContainerProps) => {\n  return (\n    <div\n      className=\"isolib-text-collapse isolib-text-collapse-container\"\n      style={style}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport DefaultButton from 'antd/lib/button';\nimport type { ButtonCollapseProps } from '../typings';\n\nexport const ButtonCollapse = ({\n  children,\n  collapsed,\n  hidden,\n  innerRef,\n  space,\n  onClick,\n}: ButtonCollapseProps) => {\n  return (\n    <DefaultButton\n      type=\"link\"\n      className=\"isolib-text-collapse-button\"\n      ref={innerRef}\n      hidden={hidden}\n      onClick={onClick}\n      style={collapsed ? { position: 'absolute', right: `-${space}px` } : {}}\n    >\n      {children}\n    </DefaultButton>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport type { InternalProps } from '../typings';\n\nexport const Internal = ({\n  innerRef,\n  collapsed,\n  space,\n  children,\n}: InternalProps) => {\n  return (\n    <div\n      ref={innerRef}\n      style={collapsed && space ? { paddingRight: space } : {}}\n      className={classNames('isolib-text-collapse-internal', {\n        'isolib-text-collapse-internal--collapsed': collapsed,\n      })}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport Icon from '../../atoms/Icon';\nimport DefaultButton from 'antd/lib/button';\nimport type { ButtonProps } from './typings';\n\nfunction Button(props: ButtonProps) {\n  const { icon, size, className, ...rest } = props;\n\n  if (size === 'bigger') {\n    return (\n      <Button className={`isolib__bigger-button ${className}`} {...rest}>\n        <div className=\"isolib__bigger-button-label\">{props.children}</div>\n        {!!icon && (\n          <div className=\"isolib__bigger-button-icon\">\n            <Icon src={icon} />\n          </div>\n        )}\n      </Button>\n    );\n  }\n\n  return <DefaultButton {...props} className={className} size={size} />;\n}\n\nexport default Button;\n","import React, { memo } from 'react';\nimport { Position, Handle } from 'reactflow';\nimport Icon from '../Icon';\n\ninterface FlowNodeProps {\n  data: {\n    icon: string;\n    label: string;\n    static: boolean;\n    color?: string;\n    onRemove: () => void;\n  };\n}\n\nexport const FlowNode = memo(({ data }: FlowNodeProps) => {\n  const { icon, label, onRemove, color = '#6938fb' } = data;\n  return (\n    <>\n      <Handle type=\"target\" position={Position.Top} isConnectable={false} />\n      <div className=\"react-flow__custom-node\">\n        <div\n          className=\"react-flow__custom-node-container\"\n          style={{ borderColor: color }}\n        >\n          <div\n            className=\"react-flow__custom-node-header\"\n            style={{ background: color }}\n          >\n            <span className=\"react-flow__custom-node-header-icon\">\n              <Icon src={icon} />\n            </span>\n            {!data?.static && (\n              <span\n                className=\"react-flow__custom-node-header-close\"\n                onClick={onRemove}\n              >\n                <Icon src=\"CloseCircleFilled\" />\n              </span>\n            )}\n          </div>\n          <div className=\"react-flow__custom-node-label\">{label}</div>\n        </div>\n      </div>\n      <Handle\n        type=\"source\"\n        position={Position.Bottom}\n        id=\"b\"\n        style={{ bottom: 10, top: 'auto' }}\n        isConnectable={false}\n      />\n    </>\n  );\n});\n","import React from 'react';\nimport { getBezierPath } from 'reactflow';\nimport type { BezierEdgeProps } from 'reactflow';\n\ninterface FlowEdgeProps extends Omit<BezierEdgeProps, 'id'> {\n  id?: string;\n}\n\nexport const FlowEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  markerEnd,\n}: FlowEdgeProps): JSX.Element => {\n  const mainColor = '#b1b1b7';\n  const [edgePath] = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n    curvature: 0,\n  });\n\n  const X = (sourceX + targetX) / 2;\n  const Y = (sourceY + targetY) / 2;\n  const node = data.target;\n  const edge = id;\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      {!data?.static && (\n        <g\n          transform={`translate(${X}, ${Y})`}\n          onClick={() => data?.onClick(node, edge)}\n        >\n          <rect\n            x=\"-10\"\n            y=\"-10\"\n            width=\"18\"\n            ry=\"4\"\n            rx=\"4\"\n            height=\"18\"\n            fill=\"white\"\n            stroke={mainColor}\n          ></rect>\n          <text fill={mainColor} y=\"3\" x=\"-5\">\n            +\n          </text>\n        </g>\n      )}\n    </>\n  );\n};\n\n/**\n * \n  \n */\n","type I18nProps = { [key: string]: string };\n\nexport const useTranslate =\n  (i18n?: I18nProps) =>\n  (text: string): string => {\n    return i18n ? i18n[text] : text;\n  };\n","import React, { useState } from 'react';\nimport Modal from 'antd/lib/modal';\n\nimport Button from '../../../molecules/Button';\nimport { useTranslate } from '../../../../hooks/useTrasnlate';\n\nimport type { NoteTypeModalProps, payloadType } from '../typings';\n\nconst NodeTypeModal = ({\n  id,\n  icon,\n  label,\n  i18n,\n  modal,\n  onSubmit,\n}: NoteTypeModalProps) => {\n  const tt = useTranslate(i18n);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleCloseModal = () => setIsOpen(false);\n\n  const handleClick = () => {\n    if (modal) {\n      setIsOpen(true);\n    } else {\n      onSubmit({});\n    }\n  };\n\n  const handleSubmit = (payload: payloadType) => {\n    onSubmit(payload);\n    handleCloseModal();\n  };\n\n  return (\n    <>\n      <Button\n        key={id}\n        icon={icon}\n        onClick={handleClick}\n        size=\"bigger\"\n        className=\"flow-modal-add-item\"\n      >\n        {label}\n      </Button>\n      {!!modal && (\n        <Modal\n          title={tt('Add node')}\n          open={isOpen}\n          onCancel={handleCloseModal}\n          footer={[<Button onClick={handleCloseModal}>{tt('Close')}</Button>]}\n        >\n          {modal({ onSubmit: handleSubmit })}\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default NodeTypeModal;\n","import type { Node } from 'reactflow';\nimport type { FlowDefaultNode } from '../typings';\n\nexport const exportNode = (nodes: Node[]): FlowDefaultNode[] => {\n  return nodes\n    .filter((node) => node.type === 'FlowNode')\n    .map(({ data }) => {\n      const variables: FlowDefaultNode = {\n        label: data.label,\n        icon: data.icon,\n      };\n\n      if (data.color) variables.color = data.color;\n\n      if (data.static) variables.static = data.static;\n\n      if (data.payload) variables.payload = data.payload;\n\n      return variables;\n    });\n};\n","import type { FlowNode } from '../typings';\nimport {\n  dxBetweenStartAndNode,\n  dxBetweenNodes,\n  dxLessWhenStaticNode,\n} from './index';\n\nexport const nodesRelocation = (nodes: FlowNode[]) => {\n  return nodes.reduce((initial, node, key) => {\n    const isStart = key === 0;\n    const isSecond = key === 1;\n    const beforeItem = initial[key - 1];\n    if (isStart) {\n      node.position.y = 0;\n    } else if (isSecond) {\n      node.position.y = dxBetweenStartAndNode;\n    } else {\n      const positionY = beforeItem?.position.y;\n      node.position.y = positionY + dxBetweenNodes;\n    }\n\n    if (beforeItem?.id !== 'start' && node.data.static) {\n      node.position.y -= dxLessWhenStaticNode;\n    }\n\n    return [...initial, node];\n  }, [] as FlowNode[]);\n};\n","export * from './exportNode';\nexport * from './nodesRelocation';\n\nexport const mainColor = '#6938fb';\nexport const dxBetweenNodes = 100;\nexport const dxBetweenStartAndNode = 80;\nexport const dxLessWhenStaticNode = 20;\n","import React, { useEffect, useRef } from 'react';\nimport { useNodesState, useEdgesState } from 'reactflow';\nimport { exportNode, nodesRelocation } from '../helpers';\n\nimport { mainColor, dxBetweenStartAndNode } from '../helpers';\n\nimport type {\n  FlowNode,\n  FlowDefaultNode,\n  FlowEdge,\n  payloadType,\n} from '../typings';\n\nconst circleStyles: React.CSSProperties = {\n  width: 24,\n  height: 24,\n  borderRadius: '50%',\n  textTransform: 'uppercase',\n  textAlign: 'center',\n  padding: 0,\n  justifyContent: 'center',\n  alignItems: 'center',\n  display: 'flex',\n  fontSize: '.3rem',\n};\n\nconst initialNodes: FlowNode[] = [\n  {\n    id: 'start',\n    type: 'input',\n    data: { label: 'Start' },\n    style: {\n      ...circleStyles,\n      background: mainColor,\n      borderColor: mainColor,\n      color: '#fff',\n    },\n    position: { x: 63, y: 0 },\n    draggable: true,\n  },\n  {\n    id: 'end',\n    type: 'output',\n    style: {\n      ...circleStyles,\n      background: mainColor,\n      borderColor: mainColor,\n      color: '#fff',\n    },\n    data: { label: 'End' },\n    position: { x: 63, y: dxBetweenStartAndNode },\n    draggable: true,\n  },\n];\n\nconst initialEdges: FlowEdge[] = [\n  {\n    id: 'start-end',\n    type: 'FlowEdge',\n    source: 'start',\n    target: 'end',\n  },\n];\n\ninterface BuildFlowData {\n  source: string;\n  target: string;\n  static?: boolean;\n}\n\ninterface FlowHookProps {\n  openModal: (isOpen: boolean) => void;\n  onAdd?: (nodes: FlowDefaultNode[]) => void;\n  onRemove?: (nodes: FlowDefaultNode[]) => void;\n  defaultNodes?: FlowDefaultNode[];\n  draggable?: boolean;\n}\n\nconst useFlow = ({\n  defaultNodes = [],\n  onRemove,\n  onAdd,\n  openModal,\n  draggable,\n}: FlowHookProps) => {\n  const EdgeDataRef = useRef({ idNode: '', idEdge: '' });\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n\n  const onClickEdge = (idNode: string, idEdge: string) => {\n    EdgeDataRef.current = { idNode, idEdge };\n    openModal(true);\n  };\n\n  const buildFlowEdge = (data: BuildFlowData): FlowEdge => {\n    const curDate = String(Math.random() * 100000);\n    const { source, target } = data;\n    return {\n      id: curDate,\n      type: 'FlowEdge',\n      source,\n      target,\n      data: {\n        target,\n        static: data.static,\n        onClick: onClickEdge,\n      },\n    };\n  };\n\n  const handleRemove = (id: string) => {\n    let nodeList: FlowNode[] = [];\n\n    setNodes((nodes) => {\n      setEdges((edges) => {\n        const index = nodes.findIndex((node) => node.id === id);\n\n        const afterElement = nodes[index + 1];\n        const source = nodes[index - 1].id;\n        const target = afterElement.id;\n\n        const added = buildFlowEdge({\n          static: afterElement.data.static,\n          source,\n          target,\n        });\n\n        const filtered = edges.filter(\n          (edge) => edge.source !== id && edge.target !== id\n        );\n        return [...filtered, added];\n      });\n\n      nodeList = nodes.filter((node) => node.id !== id);\n      return nodesRelocation(nodeList);\n    });\n\n    if (onRemove) {\n      onRemove(exportNode(nodeList));\n    }\n  };\n\n  const buildFlowNode = (\n    data: FlowDefaultNode,\n    payload: payloadType\n  ): FlowNode => {\n    const curDate = String(Math.random() * 100000);\n    return {\n      id: curDate,\n      type: 'FlowNode',\n      position: { x: 0, y: 0 },\n      draggable,\n      data: {\n        ...data,\n        payload,\n        onRemove: () => handleRemove(curDate),\n      },\n    };\n  };\n\n  const handleAdd =\n    (defaultNode: FlowDefaultNode) => (payload: payloadType) => {\n      let nodesCopy: FlowNode[] = [];\n\n      const { idNode, idEdge } = EdgeDataRef.current;\n      const node = buildFlowNode(defaultNode, payload);\n\n      setNodes((nodes) => {\n        setEdges((edges) => {\n          const deleted = edges.find((edge) => edge.id === idEdge);\n          if (!deleted) return edges;\n\n          const edgeCopy = edges.filter((edge) => edge.id !== idEdge);\n\n          const addedEdges = [\n            buildFlowEdge({\n              source: deleted.source,\n              target: node.id,\n            }),\n            buildFlowEdge({\n              source: node.id,\n              target: deleted.target,\n            }),\n          ];\n\n          return edgeCopy.concat(addedEdges);\n        });\n\n        nodesCopy = [...nodes];\n        const index = nodesCopy.findIndex((node) => node.id === idNode);\n        nodesCopy.splice(index, 0, node);\n        return nodesRelocation(nodesCopy);\n      });\n\n      if (onAdd) {\n        onAdd(exportNode(nodesCopy));\n      }\n\n      openModal(false);\n    };\n\n  useEffect(() => {\n    const res = defaultNodes.reduce(\n      (initial, data: FlowDefaultNode, key: number) => {\n        const beforeItem = initial.nodes[key - 1];\n\n        const node = buildFlowNode(data, data.payload || {});\n        const edge = buildFlowEdge({\n          static: data.static,\n          source: beforeItem ? beforeItem.id : 'start',\n          target: node.id,\n        });\n\n        return {\n          ...initial,\n          nodes: [...initial.nodes, node],\n          edges: [...initial.edges, edge],\n        };\n      },\n      { nodes: [] as FlowNode[], edges: [] as FlowEdge[] }\n    );\n\n    const [start, end] = initialNodes.map((item) => ({ ...item, draggable }));\n    const nodes = nodesRelocation([start, ...res.nodes, end]);\n    const sourceIndex = nodes.length - 2;\n\n    const endEdge = buildFlowEdge({\n      source: nodes[sourceIndex].id,\n      target: 'end',\n    });\n\n    setNodes(nodes);\n    setEdges([...res.edges, endEdge]);\n  }, []);\n\n  return {\n    nodes,\n    edges,\n    onNodesChange,\n    onEdgesChange,\n    handleAdd,\n  };\n};\n\nexport default useFlow;\n","import React, { useRef, useState, useEffect } from 'react';\nimport ReactFlow, { Controls } from 'reactflow';\nimport Modal from 'antd/lib/modal';\n\nimport Button from '../../molecules/Button';\nimport * as FlowNode from '../../atoms/FlowNode';\nimport * as FlowEdge from '../../atoms/FlowEdge';\nimport { useTranslate } from '../../../hooks/useTrasnlate';\nimport NodeTypeModal from './components/NodeTypeModal';\nimport useFlow from './hooks/useFlow';\n\nimport type { FlowProps, FlowContainerRef } from './typings';\n\n// import './styles.less';\n\nconst Flow = (props: FlowProps) => {\n  const containerRef: FlowContainerRef = useRef(null);\n  const tt = useTranslate(props.i18n);\n  const [horizontal, setHorizontal] = useState(0);\n  const [isOpen, openModal] = useState(false);\n\n  const { defaultNodes, onRemove, draggable, onAdd } = props;\n  const flowParams = { defaultNodes, onRemove, onAdd, openModal, draggable };\n\n  const flow = useFlow(flowParams);\n\n  const handleCloseModal = () => openModal(false);\n\n  useEffect(() => {\n    const width = containerRef.current?.offsetWidth;\n    if (width) {\n      const x = width / 2 - 150;\n      setHorizontal(x);\n    }\n  }, []);\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"react-flow-global-container\"\n      style={{ width: '100%', height: '100vh' }}\n    >\n      {horizontal && (\n        <>\n          <ReactFlow\n            {...flow}\n            edgeTypes={FlowEdge}\n            nodeTypes={FlowNode}\n            snapToGrid={true}\n            defaultViewport={{\n              x: horizontal,\n              y: 0,\n              zoom: 2,\n            }}\n            minZoom={1}\n            maxZoom={2}\n            attributionPosition=\"bottom-left\"\n          >\n            <Controls showInteractive={false} />\n          </ReactFlow>\n          {props.nodeTypes && (\n            <Modal\n              title={tt('Add node')}\n              open={isOpen}\n              onCancel={handleCloseModal}\n              footer={[\n                <Button onClick={handleCloseModal}>{tt('Close')}</Button>,\n              ]}\n            >\n              <div className=\"flow-modal-add-container\">\n                {props.nodeTypes.map((node) => (\n                  <NodeTypeModal\n                    key={node.id}\n                    {...node}\n                    onSubmit={flow.handleAdd(node)}\n                    i18n={props.i18n}\n                  />\n                ))}\n              </div>\n            </Modal>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Flow;\n","import React, { useEffect, useState, useRef, useMemo } from 'react';\nimport Select from 'antd/lib/select';\nimport debounce from 'lodash/debounce';\n\nimport {\n  SelectAsyncProps,\n  OptionType,\n  SelectFetchOptionsType,\n} from './typings';\n\nfunction SelectAsync({\n  fetchOptions,\n  defaultOptions = [],\n  defaultValue,\n  onChange,\n  ...props\n}: SelectAsyncProps) {\n  const [selected, setSelected] = useState('');\n  const [options, setOptions] = useState(() => defaultOptions);\n  const [loading, setLoading] = useState(false);\n  const fetchRef = useRef(0);\n\n  const loadOptions = (val: SelectFetchOptionsType) => {\n    fetchRef.current += 1;\n    const fetchId = fetchRef.current;\n    setLoading(true);\n    fetchOptions(val, selected).then((newOptions: OptionType[]) => {\n      if (fetchId !== fetchRef.current) return;\n\n      setLoading(false);\n      setOptions(newOptions);\n    });\n  };\n\n  const debounceFetcher = useMemo(() => {\n    return debounce(loadOptions, 50);\n  }, [fetchOptions]);\n\n  const handleOnChange = (val: string, option: OptionType | OptionType[]) => {\n    setSelected(val);\n    if (onChange) onChange(val, option);\n  };\n\n  useEffect(() => {\n    loadOptions('');\n    setSelected(defaultValue);\n  }, [defaultValue]);\n\n  return (\n    <Select\n      labelInValue\n      filterOption={false}\n      onSearch={debounceFetcher}\n      onFocus={debounceFetcher}\n      {...props}\n      loading={loading}\n      value={selected}\n      onChange={handleOnChange}\n      options={options}\n    />\n  );\n}\n\nexport default SelectAsync;\n","import React, { useState } from 'react';\nimport DefaultTable from 'antd/lib/table';\nimport ImportantIcon from './components/ImportantIcon';\nimport getRowClassName from './utils/getRowClassName';\nimport { TableProps, TableRecord } from '../../..';\n\nfunction Table({\n  columns,\n  dataSource,\n  hidePagination = false,\n  loading = true,\n  onChange,\n  onRowClick,\n  pagination,\n  isMessage = false,\n  ...rest\n}: TableProps) {\n  const [hover, setHover] = useState<React.Key>('');\n\n  const additionalColumns = [];\n  if (isMessage) {\n    additionalColumns.push({\n      dataIndex: 'important',\n      key: 'important',\n      width: 40,\n      render: (_i: string | number | boolean, res: TableRecord) => (\n        <ImportantIcon {...res} />\n      ),\n    });\n  }\n\n  const handleRowClick = (record: TableRecord) => () => {\n    if (onRowClick) onRowClick(record);\n  };\n\n  return (\n    <div className={`isolib-table ${isMessage ? 'isolib-table-msg' : ''}`}>\n      <DefaultTable\n        size=\"middle\"\n        scroll={{ y: '100%' }}\n        {...rest}\n        rowSelection={{ type: 'checkbox' }}\n        columns={[...additionalColumns, ...columns]}\n        dataSource={dataSource}\n        pagination={\n          !hidePagination && {\n            ...pagination,\n            showSizeChanger: true,\n            position: ['bottomCenter'],\n          }\n        }\n        onChange={onChange}\n        loading={loading}\n        rowKey={(record) => record._id}\n        rowClassName={isMessage ? getRowClassName(hover) : ''}\n        onRow={(record) => ({\n          onClick: handleRowClick(record),\n          onMouseEnter: () => setHover(record._id),\n          onMouseLeave: () => setHover(''),\n        })}\n      />\n    </div>\n  );\n}\n\nexport default Table;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Container, ButtonCollapse, Internal } from './components';\nimport type { TextCollapseProps } from './typings';\n\nfunction TextCollapse({\n  children,\n  textSpace,\n  textLess,\n  textMore,\n  style = {},\n}: TextCollapseProps) {\n  const [collapsed, setCollapsed] = useState(true);\n  const [buttonHidden, setButtonHidden] = useState(true);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const internalRef = useRef<HTMLDivElement>(null);\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  const handleClick = () => {\n    setCollapsed(!collapsed);\n  };\n\n  useEffect(() => {\n    if (internalRef.current && textRef.current) {\n      const textWidth = textRef.current.offsetWidth;\n      const innerWidth = internalRef.current.offsetWidth;\n      const bHidden = !!(textWidth + textSpace < innerWidth);\n      setButtonHidden(bHidden);\n    }\n  }, [textSpace]);\n\n  return (\n    <Container style={style}>\n      <Internal collapsed={collapsed} innerRef={internalRef} space={textSpace}>\n        <span ref={textRef}>{children}</span>\n        <ButtonCollapse\n          innerRef={buttonRef}\n          collapsed={collapsed}\n          onClick={handleClick}\n          hidden={buttonHidden}\n          space={textSpace}\n        >\n          {collapsed ? textMore : textLess}\n        </ButtonCollapse>\n      </Internal>\n    </Container>\n  );\n}\n\nexport default TextCollapse;\n"],"names":["Icon","_ref","src","alt","args","_objectWithoutPropertiesLoose","_excluded","Icons","React","style","_extends","padding","ImportantIcon","namespace","important","BellFilled","className","BellOutlined","Container","_ref$style","children","ButtonCollapse","DefaultButton","type","ref","innerRef","hidden","onClick","collapsed","position","right","space","Internal","paddingRight","classNames","isolib-text-collapse-internal--collapsed","Button","props","icon","size","rest","memo","data","label","onRemove","_data$color","color","Handle","Position","Top","isConnectable","borderColor","background","Bottom","id","bottom","top","sourceX","sourceY","targetX","targetY","markerEnd","_getBezierPath","getBezierPath","sourcePosition","targetPosition","curvature","X","Y","node","target","edge","d","transform","x","y","width","ry","rx","height","fill","stroke","useTranslate","i18n","text","NodeTypeModal","modal","onSubmit","tt","_useState","useState","isOpen","setIsOpen","handleCloseModal","key","Modal","title","open","onCancel","footer","payload","exportNode","nodes","filter","map","variables","nodesRelocation","reduce","initial","beforeItem","dxBetweenStartAndNode","dxBetweenNodes","dxLessWhenStaticNode","concat","circleStyles","borderRadius","textTransform","textAlign","justifyContent","alignItems","display","fontSize","initialNodes","draggable","initialEdges","source","DefaultBreadcrumb","margin","breadcrumbNameMap","_ref2","url","href","Item","event","preventDefault","containerRef","useRef","horizontal","setHorizontal","_useState2","openModal","flow","defaultNodes","_ref$defaultNodes","onAdd","EdgeDataRef","idNode","idEdge","_useNodesState","useNodesState","setNodes","onNodesChange","_useEdgesState","useEdgesState","edges","setEdges","onEdgesChange","onClickEdge","current","buildFlowEdge","curDate","String","Math","random","static","buildFlowNode","nodeList","index","findIndex","afterElement","added","filtered","useEffect","res","_initialNodes$map","item","endEdge","length","handleAdd","defaultNode","nodesCopy","_EdgeDataRef$current","deleted","find","edgeCopy","addedEdges","splice","useFlow","_containerRef$current","offsetWidth","ReactFlow","edgeTypes","FlowEdge","nodeTypes","FlowNode","snapToGrid","defaultViewport","zoom","minZoom","maxZoom","attributionPosition","Controls","showInteractive","fetchOptions","_ref$defaultOptions","defaultOptions","defaultValue","onChange","selected","setSelected","options","setOptions","_useState3","loading","setLoading","fetchRef","loadOptions","val","fetchId","then","newOptions","debounceFetcher","useMemo","debounce","Select","labelInValue","filterOption","onSearch","onFocus","value","option","columns","dataSource","_ref$hidePagination","hidePagination","_ref$loading","onRowClick","pagination","_ref$isMessage","isMessage","hover","setHover","additionalColumns","push","dataIndex","render","_i","hoverID","handleRowClick","record","DefaultTable","scroll","rowSelection","showSizeChanger","rowKey","_id","rowClassName","classnames","read","join","onRow","onMouseEnter","onMouseLeave","textSpace","textLess","textMore","setCollapsed","buttonHidden","setButtonHidden","buttonRef","internalRef","textRef"],"mappings":"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"}